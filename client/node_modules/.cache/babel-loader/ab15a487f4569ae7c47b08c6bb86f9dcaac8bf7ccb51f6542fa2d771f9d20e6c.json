{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samue\\\\Documents\\\\Projects\\\\reddit-client\\\\client\\\\src\\\\components\\\\PostContent\\\\PostContent.jsx\";\nimport React from 'react';\nimport './PostContent.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostContent = ({\n  post\n}) => {\n  var _post$preview, _post$preview$images, _post$preview$images$, _post$preview$images$2, _post$preview$images$3;\n  // Convert UTC to \"time ago\"\n  const timeAgo = utcSeconds => {\n    const seconds = Math.floor(Date.now() / 1000) - utcSeconds;\n    if (seconds < 60) return `${seconds}s ago`;\n    const minutes = Math.floor(seconds / 60);\n    if (minutes < 60) return `${minutes}m ago`;\n    const hours = Math.floor(minutes / 60);\n    if (hours < 24) return `${hours}h ago`;\n    const days = Math.floor(hours / 24);\n    return `${days}d ago`;\n  };\n  const imageUrl = ((_post$preview = post.preview) === null || _post$preview === void 0 ? void 0 : (_post$preview$images = _post$preview.images) === null || _post$preview$images === void 0 ? void 0 : (_post$preview$images$ = _post$preview$images[0]) === null || _post$preview$images$ === void 0 ? void 0 : (_post$preview$images$2 = _post$preview$images$.source) === null || _post$preview$images$2 === void 0 ? void 0 : (_post$preview$images$3 = _post$preview$images$2.url) === null || _post$preview$images$3 === void 0 ? void 0 : _post$preview$images$3.replace(/&amp;/g, '&')) || (post.thumbnail && post.thumbnail.startsWith('http') ? post.thumbnail : null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-content\",\n    children: [imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageUrl,\n      alt: post.title,\n      className: \"post-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"post-meta\",\n      children: [\"By \", post.author, \" \\u2022 \", post.ups, \" upvotes \\u2022 \", post.num_comments, \" comments \\u2022 \", timeAgo(post.created_utc)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = PostContent;\nexport default PostContent;\nvar _c;\n$RefreshReg$(_c, \"PostContent\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PostContent","post","_post$preview","_post$preview$images","_post$preview$images$","_post$preview$images$2","_post$preview$images$3","timeAgo","utcSeconds","seconds","Math","floor","Date","now","minutes","hours","days","imageUrl","preview","images","source","url","replace","thumbnail","startsWith","className","children","src","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","author","ups","num_comments","created_utc","_c","$RefreshReg$"],"sources":["C:/Users/samue/Documents/Projects/reddit-client/client/src/components/PostContent/PostContent.jsx"],"sourcesContent":["import React from 'react';\r\nimport './PostContent.css';\r\n\r\nconst PostContent = ({ post }) => {\r\n  // Convert UTC to \"time ago\"\r\n  const timeAgo = (utcSeconds) => {\r\n    const seconds = Math.floor(Date.now() / 1000) - utcSeconds;\r\n    if (seconds < 60) return `${seconds}s ago`;\r\n    const minutes = Math.floor(seconds / 60);\r\n    if (minutes < 60) return `${minutes}m ago`;\r\n    const hours = Math.floor(minutes / 60);\r\n    if (hours < 24) return `${hours}h ago`;\r\n    const days = Math.floor(hours / 24);\r\n    return `${days}d ago`;\r\n  };\r\n\r\n  const imageUrl =\r\n    post.preview?.images?.[0]?.source?.url?.replace(/&amp;/g, '&') ||\r\n    (post.thumbnail && post.thumbnail.startsWith('http') ? post.thumbnail : null);\r\n\r\n  return (\r\n    <div className=\"post-content\">\r\n      {imageUrl && <img src={imageUrl} alt={post.title} className=\"post-image\" />}\r\n      <h3>{post.title}</h3>\r\n      <p className=\"post-meta\">\r\n        By {post.author} • {post.ups} upvotes • {post.num_comments} comments • {timeAgo(post.created_utc)}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostContent;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAA,IAAAC,aAAA,EAAAC,oBAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA;EAChC;EACA,MAAMC,OAAO,GAAIC,UAAU,IAAK;IAC9B,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAGL,UAAU;IAC1D,IAAIC,OAAO,GAAG,EAAE,EAAE,OAAO,GAAGA,OAAO,OAAO;IAC1C,MAAMK,OAAO,GAAGJ,IAAI,CAACC,KAAK,CAACF,OAAO,GAAG,EAAE,CAAC;IACxC,IAAIK,OAAO,GAAG,EAAE,EAAE,OAAO,GAAGA,OAAO,OAAO;IAC1C,MAAMC,KAAK,GAAGL,IAAI,CAACC,KAAK,CAACG,OAAO,GAAG,EAAE,CAAC;IACtC,IAAIC,KAAK,GAAG,EAAE,EAAE,OAAO,GAAGA,KAAK,OAAO;IACtC,MAAMC,IAAI,GAAGN,IAAI,CAACC,KAAK,CAACI,KAAK,GAAG,EAAE,CAAC;IACnC,OAAO,GAAGC,IAAI,OAAO;EACvB,CAAC;EAED,MAAMC,QAAQ,GACZ,EAAAf,aAAA,GAAAD,IAAI,CAACiB,OAAO,cAAAhB,aAAA,wBAAAC,oBAAA,GAAZD,aAAA,CAAciB,MAAM,cAAAhB,oBAAA,wBAAAC,qBAAA,GAApBD,oBAAA,CAAuB,CAAC,CAAC,cAAAC,qBAAA,wBAAAC,sBAAA,GAAzBD,qBAAA,CAA2BgB,MAAM,cAAAf,sBAAA,wBAAAC,sBAAA,GAAjCD,sBAAA,CAAmCgB,GAAG,cAAAf,sBAAA,uBAAtCA,sBAAA,CAAwCgB,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC,MAC7DrB,IAAI,CAACsB,SAAS,IAAItB,IAAI,CAACsB,SAAS,CAACC,UAAU,CAAC,MAAM,CAAC,GAAGvB,IAAI,CAACsB,SAAS,GAAG,IAAI,CAAC;EAE/E,oBACExB,OAAA;IAAK0B,SAAS,EAAC,cAAc;IAAAC,QAAA,GAC1BT,QAAQ,iBAAIlB,OAAA;MAAK4B,GAAG,EAAEV,QAAS;MAACW,GAAG,EAAE3B,IAAI,CAAC4B,KAAM;MAACJ,SAAS,EAAC;IAAY;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3ElC,OAAA;MAAA2B,QAAA,EAAKzB,IAAI,CAAC4B;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBlC,OAAA;MAAG0B,SAAS,EAAC,WAAW;MAAAC,QAAA,GAAC,KACpB,EAACzB,IAAI,CAACiC,MAAM,EAAC,UAAG,EAACjC,IAAI,CAACkC,GAAG,EAAC,kBAAW,EAAClC,IAAI,CAACmC,YAAY,EAAC,mBAAY,EAAC7B,OAAO,CAACN,IAAI,CAACoC,WAAW,CAAC;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;AAACK,EAAA,GA1BItC,WAAW;AA4BjB,eAAeA,WAAW;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}