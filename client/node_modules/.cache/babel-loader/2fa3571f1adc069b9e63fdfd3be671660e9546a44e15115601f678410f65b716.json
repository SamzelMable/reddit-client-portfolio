{"ast":null,"code":"var _jsxFileName = \"C:\\\\reddit-client\\\\client\\\\src\\\\components\\\\PostList\\\\PostList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchPosts } from '../../features/posts/postsSlice';\nimport PostCard from '../PostCard/PostCard';\nimport PostSkeleton from '../PostSkeleton/PostSkeleton';\nimport './PostList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = () => {\n  _s();\n  const {\n    items,\n    status,\n    error\n  } = useSelector(state => state.posts);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (status === 'idle') {\n      dispatch(fetchPosts('popular')); // default to popular\n    }\n  }, [status, dispatch]);\n  if (status === 'loading') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-list\",\n      children: Array(5).fill().map((_, i) => /*#__PURE__*/_jsxDEV(PostSkeleton, {}, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n  if (status === 'failed') return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 35\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-list\",\n    children: items.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n      post: post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(PostList, \"ko5k5/VsAX0h0K/fb4EMxqeM3KE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","fetchPosts","PostCard","PostSkeleton","jsxDEV","_jsxDEV","PostList","_s","items","status","error","state","posts","dispatch","className","children","Array","fill","map","_","i","fileName","_jsxFileName","lineNumber","columnNumber","post","id","_c","$RefreshReg$"],"sources":["C:/reddit-client/client/src/components/PostList/PostList.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchPosts } from '../../features/posts/postsSlice';\r\nimport PostCard from '../PostCard/PostCard';\r\nimport PostSkeleton from '../PostSkeleton/PostSkeleton';\r\nimport './PostList.css';\r\n\r\nconst PostList = () => {\r\n  const { items, status, error } = useSelector((state) => state.posts);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (status === 'idle') {\r\n      dispatch(fetchPosts('popular')); // default to popular\r\n    }\r\n  }, [status, dispatch]);\r\n\r\n  if (status === 'loading') {\r\n    return (\r\n      <div className=\"post-list\">\r\n        {Array(5).fill().map((_, i) => (\r\n          <PostSkeleton key={i} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (status === 'failed') return <p>Error: {error}</p>;\r\n\r\n  return (\r\n    <div className=\"post-list\">\r\n      {items.map((post) => (\r\n        <PostCard key={post.id} post={post} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,QAAQ,iCAAiC;AAC5D,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAAEC,KAAK;IAAEC,MAAM;IAAEC;EAAM,CAAC,GAAGX,WAAW,CAAEY,KAAK,IAAKA,KAAK,CAACC,KAAK,CAAC;EACpE,MAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,IAAIW,MAAM,KAAK,MAAM,EAAE;MACrBI,QAAQ,CAACZ,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IACnC;EACF,CAAC,EAAE,CAACQ,MAAM,EAAEI,QAAQ,CAAC,CAAC;EAEtB,IAAIJ,MAAM,KAAK,SAAS,EAAE;IACxB,oBACEJ,OAAA;MAAKS,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBACxBf,OAAA,CAACF,YAAY,MAAMiB,CAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACxB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV;EAEA,IAAIf,MAAM,KAAK,QAAQ,EAAE,oBAAOJ,OAAA;IAAAU,QAAA,GAAG,SAAO,EAACL,KAAK;EAAA;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAErD,oBACEnB,OAAA;IAAKS,SAAS,EAAC,WAAW;IAAAC,QAAA,EACvBP,KAAK,CAACU,GAAG,CAAEO,IAAI,iBACdpB,OAAA,CAACH,QAAQ;MAAeuB,IAAI,EAAEA;IAAK,GAApBA,IAAI,CAACC,EAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CACtC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACjB,EAAA,CA7BID,QAAQ;EAAA,QACqBP,WAAW,EAC3BC,WAAW;AAAA;AAAA2B,EAAA,GAFxBrB,QAAQ;AA+Bd,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}