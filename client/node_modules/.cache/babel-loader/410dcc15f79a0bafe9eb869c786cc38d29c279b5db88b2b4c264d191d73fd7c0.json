{"ast":null,"code":"import React,{useEffect}from'react';import{useSelector,useDispatch}from'react-redux';import{fetchPosts}from'../../features/posts/postsSlice';import PostCard from'../PostCard/PostCard';import PostSkeleton from'../PostSkeleton/PostSkeleton';import'./PostList.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PostList=()=>{const{items,status,error}=useSelector(state=>state.posts);const dispatch=useDispatch();useEffect(()=>{if(status==='idle'){dispatch(fetchPosts('popular'));// default to popular\n}},[status,dispatch]);if(status==='loading'){return/*#__PURE__*/_jsx(\"div\",{className:\"post-list\",children:Array(5).fill().map((_,i)=>/*#__PURE__*/_jsx(PostSkeleton,{},i))});}if(status==='failed')return/*#__PURE__*/_jsxs(\"p\",{children:[\"Error: \",error]});return/*#__PURE__*/_jsx(\"div\",{className:\"post-list\",children:items.map(post=>/*#__PURE__*/_jsx(PostCard,{post:post},post.id))});};export default PostList;","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","fetchPosts","PostCard","PostSkeleton","jsx","_jsx","jsxs","_jsxs","PostList","items","status","error","state","posts","dispatch","className","children","Array","fill","map","_","i","post","id"],"sources":["C:/Users/samue/Documents/Projects/reddit-client/client/src/components/PostList/PostList.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchPosts } from '../../features/posts/postsSlice';\r\nimport PostCard from '../PostCard/PostCard';\r\nimport PostSkeleton from '../PostSkeleton/PostSkeleton';\r\nimport './PostList.css';\r\n\r\nconst PostList = () => {\r\n  const { items, status, error } = useSelector((state) => state.posts);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (status === 'idle') {\r\n      dispatch(fetchPosts('popular')); // default to popular\r\n    }\r\n  }, [status, dispatch]);\r\n\r\n  if (status === 'loading') {\r\n    return (\r\n      <div className=\"post-list\">\r\n        {Array(5).fill().map((_, i) => (\r\n          <PostSkeleton key={i} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (status === 'failed') return <p>Error: {error}</p>;\r\n\r\n  return (\r\n    <div className=\"post-list\">\r\n      {items.map((post) => (\r\n        <PostCard key={post.id} post={post} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostList;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,OAASC,UAAU,KAAQ,iCAAiC,CAC5D,MAAO,CAAAC,QAAQ,KAAM,sBAAsB,CAC3C,MAAO,CAAAC,YAAY,KAAM,8BAA8B,CACvD,MAAO,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExB,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACrB,KAAM,CAAEC,KAAK,CAAEC,MAAM,CAAEC,KAAM,CAAC,CAAGZ,WAAW,CAAEa,KAAK,EAAKA,KAAK,CAACC,KAAK,CAAC,CACpE,KAAM,CAAAC,QAAQ,CAAGd,WAAW,CAAC,CAAC,CAE9BF,SAAS,CAAC,IAAM,CACd,GAAIY,MAAM,GAAK,MAAM,CAAE,CACrBI,QAAQ,CAACb,UAAU,CAAC,SAAS,CAAC,CAAC,CAAE;AACnC,CACF,CAAC,CAAE,CAACS,MAAM,CAAEI,QAAQ,CAAC,CAAC,CAEtB,GAAIJ,MAAM,GAAK,SAAS,CAAE,CACxB,mBACEL,IAAA,QAAKU,SAAS,CAAC,WAAW,CAAAC,QAAA,CACvBC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,CAAEC,CAAC,gBACxBhB,IAAA,CAACF,YAAY,IAAMkB,CAAI,CACxB,CAAC,CACC,CAAC,CAEV,CAEA,GAAIX,MAAM,GAAK,QAAQ,CAAE,mBAAOH,KAAA,MAAAS,QAAA,EAAG,SAAO,CAACL,KAAK,EAAI,CAAC,CAErD,mBACEN,IAAA,QAAKU,SAAS,CAAC,WAAW,CAAAC,QAAA,CACvBP,KAAK,CAACU,GAAG,CAAEG,IAAI,eACdjB,IAAA,CAACH,QAAQ,EAAeoB,IAAI,CAAEA,IAAK,EAApBA,IAAI,CAACC,EAAiB,CACtC,CAAC,CACC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAf,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}