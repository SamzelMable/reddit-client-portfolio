{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { fetchPostDetails } from '../../utils/api'; // use api.js\n\nexport const fetchPostDetail = createAsyncThunk('postDetail/fetchPostDetail', async (postId, {\n  rejectWithValue\n}) => {\n  try {\n    const data = await fetchPostDetails(postId);\n    return data; // expects { post, comments }\n  } catch (err) {\n    return rejectWithValue(err.message);\n  }\n});\nconst postDetailSlice = createSlice({\n  name: 'postDetail',\n  initialState: {\n    post: null,\n    comments: [],\n    status: 'idle',\n    error: null\n  },\n  reducers: {\n    clearPostDetail: state => {\n      state.post = null;\n      state.comments = [];\n      state.status = 'idle';\n      state.error = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchPostDetail.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchPostDetail.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.post = action.payload.post;\n      state.comments = action.payload.comments;\n    }).addCase(fetchPostDetail.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  clearPostDetail\n} = postDetailSlice.actions;\nexport default postDetailSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchPostDetails","fetchPostDetail","postId","rejectWithValue","data","err","message","postDetailSlice","name","initialState","post","comments","status","error","reducers","clearPostDetail","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["C:/reddit-client/client/src/features/postDetail/postDetailSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { fetchPostDetails } from '../../utils/api'; // use api.js\r\n\r\nexport const fetchPostDetail = createAsyncThunk(\r\n  'postDetail/fetchPostDetail',\r\n  async (postId, { rejectWithValue }) => {\r\n    try {\r\n      const data = await fetchPostDetails(postId);\r\n      return data; // expects { post, comments }\r\n    } catch (err) {\r\n      return rejectWithValue(err.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst postDetailSlice = createSlice({\r\n  name: 'postDetail',\r\n  initialState: {\r\n    post: null,\r\n    comments: [],\r\n    status: 'idle',\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    clearPostDetail: (state) => {\r\n      state.post = null;\r\n      state.comments = [];\r\n      state.status = 'idle';\r\n      state.error = null;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchPostDetail.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchPostDetail.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        state.post = action.payload.post;\r\n        state.comments = action.payload.comments;\r\n      })\r\n      .addCase(fetchPostDetail.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { clearPostDetail } = postDetailSlice.actions;\r\nexport default postDetailSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,SAASC,gBAAgB,QAAQ,iBAAiB,CAAC,CAAC;;AAEpD,OAAO,MAAMC,eAAe,GAAGF,gBAAgB,CAC7C,4BAA4B,EAC5B,OAAOG,MAAM,EAAE;EAAEC;AAAgB,CAAC,KAAK;EACrC,IAAI;IACF,MAAMC,IAAI,GAAG,MAAMJ,gBAAgB,CAACE,MAAM,CAAC;IAC3C,OAAOE,IAAI,CAAC,CAAC;EACf,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZ,OAAOF,eAAe,CAACE,GAAG,CAACC,OAAO,CAAC;EACrC;AACF,CACF,CAAC;AAED,MAAMC,eAAe,GAAGT,WAAW,CAAC;EAClCU,IAAI,EAAE,YAAY;EAClBC,YAAY,EAAE;IACZC,IAAI,EAAE,IAAI;IACVC,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,eAAe,EAAGC,KAAK,IAAK;MAC1BA,KAAK,CAACN,IAAI,GAAG,IAAI;MACjBM,KAAK,CAACL,QAAQ,GAAG,EAAE;MACnBK,KAAK,CAACJ,MAAM,GAAG,MAAM;MACrBI,KAAK,CAACH,KAAK,GAAG,IAAI;IACpB;EACF,CAAC;EACDI,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAAClB,eAAe,CAACmB,OAAO,EAAGJ,KAAK,IAAK;MAC3CA,KAAK,CAACJ,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDO,OAAO,CAAClB,eAAe,CAACoB,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MACrDN,KAAK,CAACJ,MAAM,GAAG,WAAW;MAC1BI,KAAK,CAACN,IAAI,GAAGY,MAAM,CAACC,OAAO,CAACb,IAAI;MAChCM,KAAK,CAACL,QAAQ,GAAGW,MAAM,CAACC,OAAO,CAACZ,QAAQ;IAC1C,CAAC,CAAC,CACDQ,OAAO,CAAClB,eAAe,CAACuB,QAAQ,EAAE,CAACR,KAAK,EAAEM,MAAM,KAAK;MACpDN,KAAK,CAACJ,MAAM,GAAG,QAAQ;MACvBI,KAAK,CAACH,KAAK,GAAGS,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAER;AAAgB,CAAC,GAAGR,eAAe,CAACkB,OAAO;AAC1D,eAAelB,eAAe,CAACmB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}